DELIMITER $$

CREATE PROCEDURE `sp_Marcas_insertar` (
    IN `Marc_Marca` VARCHAR(60),
    IN `Marc_UsuarioCreacion` INT,
    IN `Marc_FechaCreacion` DATETIME
)
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        -- Error handling
        ROLLBACK;
        SELECT 0;
    END;

    DECLARE EXIT HANDLER FOR SQLWARNING
    BEGIN
        -- Warning handling
        ROLLBACK;
        SELECT 0;
    END;

    START TRANSACTION;
    BEGIN
        INSERT INTO `gral_tbmarcas` 
        (
            `Marc_Marca`, 
            `Marc_UsuarioCreacion`, 
            `Marc_FechaCreacion`
        )
        VALUES 
        (
            Marc_Marca, 
            Marc_UsuarioCreacion, 
            Marc_FechaCreacion
        );

        COMMIT;
        SELECT 1;
    END;
END$$

DELIMITER ;

CREATE PROCEDURE SP_Marcas_Listar ()
BEGIN
     SELECT 
    Marc_Id, 
    Marc_Marca, 
    Marc_UsuarioCreacion, 
    Marc_FechaCreacion, 
    Marc_UsuarioModificacion, 
    Marc_FechaModificacion
  FROM gral_tbMarcas
  WHERE Marc_Estado = 1; 
END


CREATE PROCEDURE SP_Factura_Listar()
BEGIN
    SELECT 
        F.Fact_Id,
        C.Clie_Nombre,
        E.Empl_Nombre,
        M.Mepa_Metodo,
        F.Fact_Finalizado 
    FROM vent_tbFactura F
    LEFT JOIN gral_tbClientes C ON C.Clie_Id = F.Clie_Id
    LEFT JOIN gral_tbEmpleados E ON E.Empl_Id = F.Empl_Id
    LEFT JOIN gral_tbMetodosPago M ON M.Mepa_Id = F.Mepa_Id;
END


ALTER TABLE dbsistemaesmeralda.gral_tbmarcas
MODIFY COLUMN Marc_Id INT AUTO_INCREMENT;


CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_Marcas_Eliminar`(
    IN `Marc_Codigo` INT
)
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        -- Error handling
        DECLARE error_message TEXT;
        GET DIAGNOSTICS CONDITION 1
            error_message = MESSAGE_TEXT;
        ROLLBACK;
        SELECT 0 AS result;
    END;

    DECLARE EXIT HANDLER FOR SQLWARNING
    BEGIN
        -- Warning handling
        DECLARE warning_message TEXT;
        GET DIAGNOSTICS CONDITION 1
            warning_message = MESSAGE_TEXT;
        ROLLBACK;
        SELECT 0 AS result;
    END;

    START TRANSACTION;
    BEGIN
        UPDATE `gral_tbmarcas` 
		SET Marc_Estado = 0
        WHERE Marc_Id = Marc_Codigo;
        COMMIT;
        SELECT 1 AS result;
    END;
END



CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_Marcas_actualizar`(
    IN Marc_Codigo INT,
    IN Marc_Marca VARCHAR(60),
    IN Marc_UsuarioModificacion INT,
    IN Marc_FechaModificacion DATETIME
)
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE err_message TEXT;
        DECLARE err_code INT;
        
        -- Capture error message and error code
        GET DIAGNOSTICS CONDITION 1
            err_message = MESSAGE_TEXT,
            err_code = MYSQL_ERRNO;
        
        ROLLBACK;
        -- Return the error message and error code
        SELECT CONCAT('Error Code: ', err_code, ', Error Message: ', err_message) AS error_message;
    END;

    START TRANSACTION;

    UPDATE gral_tbMarcas
    SET
        Marc_Marca = Marc_Marca,
        Marc_UsuarioModificacion = Marc_UsuarioModificacion,
        Marc_FechaModificacion = Marc_FechaModificacion
    WHERE
        Marc_Id = Marc_Codigo;

    SELECT 1;

    COMMIT;
END

DELIMITER //

CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_Marcas_buscar`(
    IN Marc_Codigo INT
)
BEGIN
    SELECT 
        Marc_Id,
        Marc_Marca,
        Marc_UsuarioCreacion,
        Marc_FechaCreacion,
        Marc_UsuarioModificacion,
        Marc_FechaModificacion,
        DATE_FORMAT(Marc_FechaCreacion, '%Y-%m-%d') AS FechaCreacion,
        DATE_FORMAT(Marc_FechaModificacion, '%Y-%m-%d') AS FechaModificacion,
        uCreacion.Usua_Usuario AS UsuarioCreacion, 
        uModificador.Usua_Usuario AS UsuarioModificacion 
    FROM 
        gral_tbMarcas c 
    LEFT JOIN acce_tbusuarios uCreacion ON uCreacion.Usua_Id = c.Marc_UsuarioCreacion
    LEFT JOIN acce_tbusuarios uModificador ON uModificador.Usua_Id = c.Marc_UsuarioModificacion
    WHERE
        Marc_Id = Marc_Codigo;
END //

DELIMITER ;